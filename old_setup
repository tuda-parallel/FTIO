from setuptools import setup, find_packages

with open(file="README.md", encoding="utf8") as fh:
    long_description = fh.read()

info = {}
with open("ftio/__init__.py", "r", encoding="utf-8") as fp:
    exec(fp.read(), info)

setup(
    name="ftio-hpc",
    version=info["__version__"],
    packages=find_packages(include=("ftio", "ftio.*")),
    author="Ahmad Tarraf",
    author_email="ahmad.tarraf@tu-darmstadt.de",
    # description=info['__description__'],
    long_description=long_description,
    long_description_content_type="text/markdown",
    url="https://github.com/tuda-parallel/FTIO",
    entry_points={
        "console_scripts": [
            # ftio
            "ftio = ftio.cli.ftio_core:run",
            "predictor = ftio.cli.predictor:main",
            # plot
            "ioplot = ftio.util.ioplot:main",
            # convert old TMIO traces
            "convert_trace = ftio.util.convert_old_trace:main",
            # for extrap
            "ioparse = ftio.util.ioparse:main",
            # jit
            "predictor_jit = ftio.api.gekkoFs.predictor_gekko_zmq:main",
            "jit = ftio.api.gekkoFs.jit.jit:main",
            # trace anylsis
            "trace_ftio = ftio.api.trace_analysis.trace_ftio_v2:main",
            "trace_analysis = ftio.api.trace_analysis.trace_analysis:main",
            "parallel_trace_analysis = ftio.api.trace_analysis.parallel_trace_analysis:main",
            "plot_csv = ftio.api.trace_analysis.plot_csv:main",
            # proxy
            "proxy_ftio = ftio.api.metric_proxy.parallel_proxy:main",
        ],
        "gui_scripts": [],
    },
    classifiers=[
        "Development Status :: 5 - Production/Stable",
        "License :: OSI Approved :: BSD License",
        "Operating System :: OS Independent",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3 :: Only",
        "Programming Language :: Python :: 3.8",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Programming Language :: Python :: 3.13",
        "Operating System :: OS Independent",
        "Intended Audience :: Developers",
        "Intended Audience :: Science/Research",
        "Topic :: Scientific/Engineering",
        "Topic :: Software Development",
        "Topic :: Software Development :: Libraries :: Python Modules",
    ],
    python_requires=">=3.8",
    include_package_data=True,
    install_requires=[
        "scikit-learn",
        "pyzmq",
        "numba",
        "darshan",
        "fastdtw",
        "scipy",
        "pandas",
        "jsonlines",
        "plotly",
        "dash",
        "kneed",
        "PyWavelets",
        "trace_updater",
        "plotly_resampler",
        "msgpack",
        "rich",
        "dash_extensions",
        "pytest",
        "fastcluster",
    ],
)
